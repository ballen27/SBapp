{"ast":null,"code":"var _jsxFileName = \"/Users/bronson.allen/Documents/Dev/projects/socialboard/src/components/Streams.js\";\nimport React, { Component } from \"react\";\n\nclass Streams extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: \"\",\n      twitchurl: \"\",\n      twitchInput: \"\",\n      mixerurl: \"\",\n      mixerInput: \"\"\n    };\n\n    this._formatThumbnail = thumbnail => {\n      const widthUrl = thumbnail.replace(\"{width}\", 400);\n      const formattedUrl = widthUrl.replace(\"{height}\", 200);\n      this.setState({\n        twitchurl: formattedUrl\n      });\n    };\n\n    this._getTwitchStreams = e => {\n      e.preventDefault();\n      fetch(\"https://api.twitch.tv/helix/streams?first=5&user_login=method\", {\n        method: \"GET\",\n        headers: {\n          \"Client-ID\": \"q4a4v5p2h4f78krp3cc088wln1u54j\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.text()).then(result => {\n        const parsedResult = JSON.parse(result);\n        this.setState({\n          data: result\n        });\n\n        this._formatThumbnail(parsedResult.data[0].thumbnail_url);\n\n        console.log(parsedResult.data[0]);\n      }).catch(error => console.log(\"ERROR: \", error));\n    };\n\n    this._getMixerStreams = e => {\n      e.preventDefault();\n      var requestOptions = {\n        method: \"GET\",\n        redirect: \"follow\"\n      };\n      fetch(\"https://mixer.com/api/v1/channels/dewtour\", requestOptions).then(response => response.text()).then(result => {\n        const parsedResult = JSON.parse(result);\n        console.log(parsedResult);\n        this.setState({\n          mixerurl: parsedResult.bannerUrl\n        });\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this._handleMixerInput = e => {\n      this.setState({\n        mixerInput: e.target.value\n      });\n      console.log(this.state.mixerInput);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todoListMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this._getTwitchStreams(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this._handleTwitchInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" get twitch streams \"), React.createElement(\"form\", {\n      onSubmit: e => this._getMixerStreams(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this._handleMixerInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" get mixer streams \"), React.createElement(\"img\", {\n      alt: \"thumbnail\",\n      src: this.state.twitchurl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      alt: \"thumbnail\",\n      src: this.state.mixerurl,\n      height: 200,\n      width: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Streams;","map":{"version":3,"sources":["/Users/bronson.allen/Documents/Dev/projects/socialboard/src/components/Streams.js"],"names":["React","Component","Streams","state","data","twitchurl","twitchInput","mixerurl","mixerInput","_formatThumbnail","thumbnail","widthUrl","replace","formattedUrl","setState","_getTwitchStreams","e","preventDefault","fetch","method","headers","then","response","text","result","parsedResult","JSON","parse","thumbnail_url","console","log","catch","error","_getMixerStreams","requestOptions","redirect","bannerUrl","_handleMixerInput","target","value","render","_handleTwitchInput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nclass Streams extends Component {\n  state = {\n    data: \"\",\n    twitchurl: \"\",\n    twitchInput: \"\",\n    mixerurl: \"\",\n    mixerInput: \"\"\n  };\n\n  _formatThumbnail = thumbnail => {\n    const widthUrl = thumbnail.replace(\"{width}\", 400);\n    const formattedUrl = widthUrl.replace(\"{height}\", 200);\n    this.setState({ twitchurl: formattedUrl });\n  };\n  _getTwitchStreams = e => {\n    e.preventDefault();\n    fetch(\"https://api.twitch.tv/helix/streams?first=5&user_login=method\", {\n      method: \"GET\",\n      headers: {\n        \"Client-ID\": \"q4a4v5p2h4f78krp3cc088wln1u54j\",\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.text())\n      .then(result => {\n        const parsedResult = JSON.parse(result);\n        this.setState({ data: result });\n        this._formatThumbnail(parsedResult.data[0].thumbnail_url);\n\n        console.log(parsedResult.data[0]);\n      })\n      .catch(error => console.log(\"ERROR: \", error));\n  };\n\n  _getMixerStreams = e => {\n    e.preventDefault();\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n\n    fetch(\"https://mixer.com/api/v1/channels/dewtour\", requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        const parsedResult = JSON.parse(result);\n        console.log(parsedResult);\n        this.setState({ mixerurl: parsedResult.bannerUrl });\n      })\n      .catch(error => console.log(\"error\", error));\n  };\n\n  _handleMixerInput = e => {\n    this.setState({ mixerInput: e.target.value });\n    console.log(this.state.mixerInput);\n  };\n\n  render() {\n    return (\n      <div className=\"todoListMain\">\n        <div className=\"header\">\n          <form onSubmit={e => this._getTwitchStreams(e)}>\n            <input\n              type=\"text\"\n              onChange={e => this._handleTwitchInput(e)}\n            ></input>\n          </form>\n          <button type=\"submit\"> get twitch streams </button>\n          <form onSubmit={e => this._getMixerStreams(e)}>\n            <input\n              type=\"text\"\n              onChange={e => this._handleMixerInput(e)}\n            ></input>\n          </form>\n          <button type=\"submit\"> get mixer streams </button>\n          <img alt={\"thumbnail\"} src={this.state.twitchurl} />\n          <img\n            alt={\"thumbnail\"}\n            src={this.state.mixerurl}\n            height={200}\n            width={400}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Streams;\n"]},"metadata":{},"sourceType":"module"}