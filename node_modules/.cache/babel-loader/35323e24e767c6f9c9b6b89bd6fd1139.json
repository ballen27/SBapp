{"ast":null,"code":"var _jsxFileName = \"/Users/bronson.allen/Documents/Dev/projects/socialboard/src/components/Streams.js\";\nimport React, { Component } from \"react\";\n\nclass Streams extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: \"\",\n      twitchurl: \"\",\n      mixerurl: \"\"\n    };\n\n    this._formatThumbnail = thumbnail => {\n      const widthUrl = thumbnail.replace(\"{width}\", 400);\n      const formattedUrl = widthUrl.replace(\"{height}\", 200);\n      this.setState({\n        twitchurl: formattedUrl\n      });\n    };\n\n    this._getTwitchStreams = e => {\n      e.preventDefault();\n      fetch(\"https://api.twitch.tv/helix/streams?first=5&user_login=method\", {\n        method: \"GET\",\n        headers: {\n          \"Client-ID\": \"q4a4v5p2h4f78krp3cc088wln1u54j\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.text()).then(result => {\n        const parsedResult = JSON.parse(result);\n        this.setState({\n          data: result\n        });\n\n        this._formatThumbnail(parsedResult.data[0].thumbnail_url);\n\n        console.log(parsedResult.data[0]);\n      }).catch(error => console.log(\"ERROR: \", error));\n    };\n\n    this._getMixerStreams = e => {\n      e.preventDefault();\n      var requestOptions = {\n        method: \"GET\",\n        redirect: \"follow\"\n      };\n      fetch(\"https://mixer.com/api/v1/channels/dewtour\", requestOptions).then(response => response.text()).then(result => {\n        const parsedResult = JSON.parse(result);\n        console.log(parsedResult);\n        this.setState({\n          mixerurl: parsedResult.bannerUrl\n        });\n      }).catch(error => console.log(\"error\", error));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todoListMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this._getTwitchStreams(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" get twitch streams \"), React.createElement(\"form\", {\n      onSubmit: e => this._getMixerStreams(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" get mixer streams \"), React.createElement(\"img\", {\n      alt: \"thumbnail\",\n      src: this.state.twitchurl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      alt: \"thumbnail\",\n      src: this.state.mixerurl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Streams;","map":{"version":3,"sources":["/Users/bronson.allen/Documents/Dev/projects/socialboard/src/components/Streams.js"],"names":["React","Component","Streams","state","data","twitchurl","mixerurl","_formatThumbnail","thumbnail","widthUrl","replace","formattedUrl","setState","_getTwitchStreams","e","preventDefault","fetch","method","headers","then","response","text","result","parsedResult","JSON","parse","thumbnail_url","console","log","catch","error","_getMixerStreams","requestOptions","redirect","bannerUrl","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nclass Streams extends Component {\n  state = {\n    data: \"\",\n    twitchurl: \"\",\n    mixerurl: \"\"\n  };\n\n  _formatThumbnail = thumbnail => {\n    const widthUrl = thumbnail.replace(\"{width}\", 400);\n    const formattedUrl = widthUrl.replace(\"{height}\", 200);\n    this.setState({ twitchurl: formattedUrl });\n  };\n  _getTwitchStreams = e => {\n    e.preventDefault();\n    fetch(\"https://api.twitch.tv/helix/streams?first=5&user_login=method\", {\n      method: \"GET\",\n      headers: {\n        \"Client-ID\": \"q4a4v5p2h4f78krp3cc088wln1u54j\",\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.text())\n      .then(result => {\n        const parsedResult = JSON.parse(result);\n        this.setState({ data: result });\n        this._formatThumbnail(parsedResult.data[0].thumbnail_url);\n\n        console.log(parsedResult.data[0]);\n      })\n      .catch(error => console.log(\"ERROR: \", error));\n  };\n\n  _getMixerStreams = e => {\n    e.preventDefault();\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n\n    fetch(\"https://mixer.com/api/v1/channels/dewtour\", requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        const parsedResult = JSON.parse(result);\n        console.log(parsedResult);\n        this.setState({ mixerurl: parsedResult.bannerUrl });\n      })\n      .catch(error => console.log(\"error\", error));\n  };\n\n  render() {\n    return (\n      <div className=\"todoListMain\">\n        <div className=\"header\">\n          <form onSubmit={e => this._getTwitchStreams(e)}>\n            <input type=\"text\"></input>\n          </form>\n          <button type=\"submit\"> get twitch streams </button>\n          <form onSubmit={e => this._getMixerStreams(e)}>\n            <input type=\"text\"></input>\n          </form>\n          <button type=\"submit\"> get mixer streams </button>\n          <img alt={\"thumbnail\"} src={this.state.twitchurl} />\n          <img alt={\"thumbnail\"} src={this.state.mixerurl} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Streams;\n"]},"metadata":{},"sourceType":"module"}